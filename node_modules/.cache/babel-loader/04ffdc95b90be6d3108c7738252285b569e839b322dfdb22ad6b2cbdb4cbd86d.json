{"ast":null,"code":"var _jsxFileName = \"/home/ivy/Development/Alchemy-Front-End/src/components/Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone_number, setPhone_Number] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSignedUp, setIsSignedUp] = useState(false);\n  const navigate = useNavigate();\n  const handleSignUp = async e => {\n    e.preventDefault();\n    try {\n      // Make API request to the backend for user sign-up\n      const response = await fetch(\"/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          phone_number,\n          password\n        })\n      });\n      if (response.ok) {\n        // Handle successful sign-up response\n        setIsSignedUp(true);\n        navigate('/login');\n        console.log(response);\n      } else {\n        console.log('Sign-up failed');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signupFormContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isSignedUp && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Successfully signed up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"signupForm\",\n      onSubmit: handleSignUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"gxAG66TZU6Z/L4TSV7HTHt9EU4Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Signup","_s","username","setUsername","email","setEmail","phone_number","setPhone_Number","password","setPassword","isSignedUp","setIsSignedUp","navigate","handleSignUp","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/home/ivy/Development/Alchemy-Front-End/src/components/Signup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Signup = () => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone_number, setPhone_Number] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSignedUp, setIsSignedUp] = useState(false);\n  \n  const navigate = useNavigate();\n  \n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    try {\n      // Make API request to the backend for user sign-up\n      const response = await fetch(\"/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          phone_number,\n          password,\n        }),\n      });\n      if (response.ok) {\n        // Handle successful sign-up response\n        setIsSignedUp(true);\n        navigate('/login');\n        console.log(response);\n      } else {\n        console.log('Sign-up failed');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"signupFormContainer\">\n      <h1>Hello</h1>\n      {isSignedUp && <p>Successfully signed up!</p>}\n      <form className=\"signupForm\" onSubmit={handleSignUp}>\n        {/* Rest of the form */}\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;QACrCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBpB,QAAQ;UACRE,KAAK;UACLE,YAAY;UACZE;QACF,CAAC;MACH,CAAC,CAAC;MACF,IAAIQ,QAAQ,CAACO,EAAE,EAAE;QACf;QACAZ,aAAa,CAAC,IAAI,CAAC;QACnBC,QAAQ,CAAC,QAAQ,CAAC;QAClBY,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;MACvB,CAAC,MAAM;QACLQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC7B,OAAA;MAAA6B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbtB,UAAU,iBAAIX,OAAA;MAAA6B,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC7CjC,OAAA;MAAM4B,SAAS,EAAC,YAAY;MAACM,QAAQ,EAAEpB;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA/CID,MAAM;EAAA,QAOOH,WAAW;AAAA;AAAAqC,EAAA,GAPxBlC,MAAM;AAiDZ,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}